affected_purls:
- pkg:pypi/pyspark@2.1.2
- pkg:pypi/pyspark@2.1.3
- pkg:pypi/pyspark@2.2.0
- pkg:pypi/pyspark@2.2.1
- pkg:pypi/pyspark@2.2.2
- pkg:pypi/pyspark@2.2.3
- pkg:pypi/pyspark@2.3.0
- pkg:pypi/pyspark@2.3.1
- pkg:pypi/pyspark@2.3.2
- pkg:pypi/pyspark@2.3.3
- pkg:pypi/pyspark@2.3.4
- pkg:pypi/pyspark@2.4.0
- pkg:pypi/pyspark@2.4.1
- pkg:pypi/pyspark@2.4.2
- pkg:pypi/pyspark@2.4.3
- pkg:pypi/pyspark@2.4.4
- pkg:pypi/pyspark@2.4.5
- pkg:pypi/pyspark@2.4.6
- pkg:pypi/pyspark@2.4.7
- pkg:pypi/pyspark@2.4.8
- pkg:pypi/pyspark@3.0.0
- pkg:pypi/pyspark@3.0.1
- pkg:pypi/pyspark@3.0.2
- pkg:pypi/pyspark@3.0.3
- pkg:pypi/pyspark@3.1.1
- pkg:pypi/pyspark@3.1.2
aliases:
- CVE-2021-38296
fixed_purl:
- pkg:pypi/pyspark@3.1.3
references:
- id: 183682
  reference_id: ''
  url: https://lists.apache.org/thread/70x8fw2gx3g9ty7yk0f2f1dlpqml2smd
- id: 183681
  reference_id: CVE-2021-38296
  url: https://nvd.nist.gov/vuln/detail/CVE-2021-38296
severities: []
summary: 'Authentication Bypass by Capture-replay

  Apache Spark supports end-to-end encryption of RPC connections via `spark.authenticate`
  and `spark.network.crypto.enabled`. In versions 3.1.2 and earlier, it uses a bespoke
  mutual authentication protocol that allows for full encryption key recovery. After
  an initial interactive attack, this would allow someone to decrypt plaintext traffic
  offline. Note that this does not affect security mechanisms controlled by `spark.authenticate.enableSaslEncryption`,
  `spark.io.encryption.enabled`, `spark.ssl`, `spark.ui.strictTransportSecurity`.
  Update to Apache Spark 3.1.3 or later'
vulnerability_id: VCID-hspv-fwru-aaac
weaknesses: []
