affected_purls: []
aliases:
- CVE-2021-32675
fixed_purl:
- pkg:deb/debian/redis@5:5.0.14-1%2Bdeb10u1?distro=sid
- pkg:deb/debian/redis@5:5.0.14-1%2Bdeb10u2?distro=sid
- pkg:deb/debian/redis@5:6.0.16-1?distro=sid
- pkg:deb/debian/redis@5:6.0.16-1%2Bdeb11u1?distro=sid
- pkg:deb/debian/redis@5:6.0.16-1%2Bdeb11u2?distro=sid
- pkg:deb/debian/redis@5:7.0.11-1?distro=sid
references: []
severities: []
summary: 'Redis is an open source, in-memory database that persists on disk. When
  parsing an incoming Redis Standard Protocol (RESP) request, Redis allocates memory
  according to user-specified values which determine the number of elements (in the
  multi-bulk header) and size of each element (in the bulk header). An attacker delivering
  specially crafted requests over multiple connections can cause the server to allocate
  significant amount of memory. Because the same parsing mechanism is used to handle
  authentication requests, this vulnerability can also be exploited by unauthenticated
  users. The problem is fixed in Redis versions 6.2.6, 6.0.16 and 5.0.14. An additional
  workaround to mitigate this problem without patching the redis-server executable
  is to block access to prevent unauthenticated users from connecting to Redis. This
  can be done in different ways: Using network access control tools like firewalls,
  iptables, security groups, etc. or Enabling TLS and requiring users to authenticate
  using client side certificates.'
vulnerability_id: VCID-swue-mu6f-aaan
weaknesses: []
