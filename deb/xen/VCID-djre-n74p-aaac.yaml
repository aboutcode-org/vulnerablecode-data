affected_purls: []
aliases:
- CVE-2020-25597
fixed_purl:
- pkg:deb/debian/xen@4.11.4%2B107-gef32c7afa2-1?distro=sid
- pkg:deb/debian/xen@4.11.4%2B37-g3263f257ca-1?distro=sid
- pkg:deb/debian/xen@4.14.0%2B80-gd101b417b7-1?distro=sid
- pkg:deb/debian/xen@4.14.5%2B94-ge49571868d-1?distro=sid
- pkg:deb/debian/xen@4.17.1%2B2-gb773c48e36-1?distro=sid
references: []
severities: []
summary: An issue was discovered in Xen through 4.14.x. There is mishandling of the
  constraint that once-valid event channels may not turn invalid. Logic in the handling
  of event channel operations in Xen assumes that an event channel, once valid, will
  not become invalid over the life time of a guest. However, operations like the resetting
  of all event channels may involve decreasing one of the bounds checked when determining
  validity. This may lead to bug checks triggering, crashing the host. An unprivileged
  guest may be able to crash Xen, leading to a Denial of Service (DoS) for the entire
  system. All Xen versions from 4.4 onwards are vulnerable. Xen versions 4.3 and earlier
  are not vulnerable. Only systems with untrusted guests permitted to create more
  than the default number of event channels are vulnerable. This number depends on
  the architecture and type of guest. For 32-bit x86 PV guests, this is 1023; for
  64-bit x86 PV guests, and for all ARM guests, this number is 4095. Systems where
  untrusted guests are limited to fewer than this number are not vulnerable. Note
  that xl and libxl limit max_event_channels to 1023 by default, so systems using
  exclusively xl, libvirt+libxl, or their own toolstack based on libxl, and not explicitly
  setting max_event_channels, are not vulnerable.
vulnerability_id: VCID-djre-n74p-aaac
weaknesses: []
