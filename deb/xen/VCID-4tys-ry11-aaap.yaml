affected_purls: []
aliases:
- CVE-2019-18423
fixed_purl:
- pkg:deb/debian/xen@4.11.3%2B24-g14b62ab3e5-1?distro=sid
- pkg:deb/debian/xen@4.11.3%2B24-g14b62ab3e5-1~deb10u1?distro=sid
- pkg:deb/debian/xen@4.11.4%2B107-gef32c7afa2-1?distro=sid
- pkg:deb/debian/xen@4.14.5%2B94-ge49571868d-1?distro=sid
- pkg:deb/debian/xen@4.17.1%2B2-gb773c48e36-1?distro=sid
references:
- id: 127877
  reference_id: '947944'
  url: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=947944
severities: []
summary: An issue was discovered in Xen through 4.12.x allowing ARM guest OS users
  to cause a denial of service via a XENMEM_add_to_physmap hypercall. p2m->max_mapped_gfn
  is used by the functions p2m_resolve_translation_fault() and p2m_get_entry() to
  sanity check guest physical frame. The rest of the code in the two functions will
  assume that there is a valid root table and check that with BUG_ON(). The function
  p2m_get_root_pointer() will ignore the unused top bits of a guest physical frame.
  This means that the function p2m_set_entry() will alias the frame. However, p2m->max_mapped_gfn
  will be updated using the original frame. It would be possible to set p2m->max_mapped_gfn
  high enough to cover a frame that would lead p2m_get_root_pointer() to return NULL
  in p2m_get_entry() and p2m_resolve_translation_fault(). Additionally, the sanity
  check on p2m->max_mapped_gfn is off-by-one allowing "highest mapped + 1" to be considered
  valid. However, p2m_get_root_pointer() will return NULL. The problem could be triggered
  with a specially crafted hypercall XENMEM_add_to_physmap{, _batch} followed by an
  access to an address (via hypercall or direct access) that passes the sanity check
  but cause p2m_get_root_pointer() to return NULL. A malicious guest administrator
  may cause a hypervisor crash, resulting in a Denial of Service (DoS). Xen version
  4.8 and newer are vulnerable. Only Arm systems are vulnerable. x86 systems are not
  affected.
vulnerability_id: VCID-4tys-ry11-aaap
weaknesses: []
