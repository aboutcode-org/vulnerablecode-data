affected_purls:
- pkg:pypi/pyjwt@0.1.1
- pkg:pypi/pyjwt@0.1.2
- pkg:pypi/pyjwt@0.1.3
- pkg:pypi/pyjwt@0.1.4
- pkg:pypi/pyjwt@0.1.5
- pkg:pypi/pyjwt@0.1.6
- pkg:pypi/pyjwt@0.1.7
- pkg:pypi/pyjwt@0.1.8
- pkg:pypi/pyjwt@0.1.9
- pkg:pypi/pyjwt@0.2.0
- pkg:pypi/pyjwt@0.2.1
- pkg:pypi/pyjwt@0.2.3
- pkg:pypi/pyjwt@0.3.0
- pkg:pypi/pyjwt@0.3.1
- pkg:pypi/pyjwt@0.3.2
- pkg:pypi/pyjwt@0.4.0
- pkg:pypi/pyjwt@0.4.1
- pkg:pypi/pyjwt@0.4.2
- pkg:pypi/pyjwt@0.4.3
- pkg:pypi/pyjwt@1.0.0
- pkg:pypi/pyjwt@1.0.1
- pkg:pypi/pyjwt@1.1.0
- pkg:pypi/pyjwt@1.3.0
- pkg:pypi/pyjwt@1.4.0
- pkg:pypi/pyjwt@1.4.1
- pkg:pypi/pyjwt@1.4.2
- pkg:pypi/pyjwt@1.5.0
aliases:
- CVE-2017-11424
- GHSA-r9jw-mwhq-wp62
fixed_purl:
- pkg:deb/debian/pyjwt@1.4.2-1.1?distro=sid
- pkg:deb/debian/pyjwt@1.7.0-2?distro=sid
- pkg:deb/debian/pyjwt@1.7.1-2?distro=sid
- pkg:deb/debian/pyjwt@2.6.0-1?distro=sid
- pkg:pypi/pyjwt@1.5.1
references:
- id: 140673
  reference_id: ''
  url: https://github.com/jpadilla/pyjwt/pull/277
- id: 140674
  reference_id: ''
  url: http://www.debian.org/security/2017/dsa-3979
- id: 126735
  reference_id: '873244'
  url: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=873244
- id: 140672
  reference_id: CVE-2017-11424
  url: https://nvd.nist.gov/vuln/detail/CVE-2017-11424
- id: 140675
  reference_id: GHSA-r9jw-mwhq-wp62
  url: https://github.com/advisories/GHSA-r9jw-mwhq-wp62
severities:
- id: 19464
  reference_id: 140675
  scoring_elements: ''
  scoring_system: cvssv3.1_qr
  value: HIGH
summary: In PyJWT 1.5.0 and below the `invalid_strings` check in `HMACAlgorithm.prepare_key`
  does not account for all PEM encoded public keys. Specifically, the PKCS1 PEM encoded
  format would be allowed because it is prefaced with the string `-----BEGIN RSA PUBLIC
  KEY-----` which is not accounted for. This enables symmetric/asymmetric key confusion
  attacks against users using the PKCS1 PEM encoded public keys, which would allow
  an attacker to craft JWTs from scratch.
vulnerability_id: VCID-2uwj-5uv4-aaac
weaknesses: []
