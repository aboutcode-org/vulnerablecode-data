affected_purls:
- pkg:pypi/pycsw@1.10.0
- pkg:pypi/pycsw@1.10.1
- pkg:pypi/pycsw@1.10.2
- pkg:pypi/pycsw@1.10.3
- pkg:pypi/pycsw@1.10.4
- pkg:pypi/pycsw@1.4.0
- pkg:pypi/pycsw@1.4.1
- pkg:pypi/pycsw@1.4.2
- pkg:pypi/pycsw@1.6.0
- pkg:pypi/pycsw@1.6.1
- pkg:pypi/pycsw@1.6.2
- pkg:pypi/pycsw@1.6.3
- pkg:pypi/pycsw@1.6.4
- pkg:pypi/pycsw@1.8.0
- pkg:pypi/pycsw@1.8.1
- pkg:pypi/pycsw@1.8.2
- pkg:pypi/pycsw@1.8.3
- pkg:pypi/pycsw@1.8.4
- pkg:pypi/pycsw@1.8.5
- pkg:pypi/pycsw@2.0.0
- pkg:pypi/pycsw@2.0.0-alpha1
- pkg:pypi/pycsw@2.0.1
aliases:
- CVE-2016-8640
- GHSA-hg4c-rgvm-964g
fixed_purl:
- pkg:deb/debian/pycsw@2.0.2%2Bdfsg-1?distro=sid
- pkg:deb/debian/pycsw@2.2.0%2Bdfsg-6?distro=sid
- pkg:deb/debian/pycsw@2.6.0%2Bdfsg-1?distro=sid
- pkg:deb/debian/pycsw@2.6.1%2Bdfsg-2?distro=sid
- pkg:pypi/pycsw@1.10.5
- pkg:pypi/pycsw@1.8.6
- pkg:pypi/pycsw@2.0.2
references:
- id: 140209
  reference_id: ''
  url: http://seclists.org/oss-sec/2016/q4/406
- id: 177729
  reference_id: ''
  url: https://github.com/geopython/pycsw/commit/522873e5ce48bb9cbd4e7e8168ca881ce709c222
- id: 177730
  reference_id: ''
  url: https://github.com/geopython/pycsw/commit/69546e13527c82e4f9191769215490381ad511b2
- id: 177731
  reference_id: ''
  url: https://github.com/geopython/pycsw/commit/daaf09b4b920708a415be3c7f446739661ba3753
- id: 140206
  reference_id: ''
  url: https://github.com/geopython/pycsw/pull/474/files
- id: 140208
  reference_id: ''
  url: https://patch-diff.githubusercontent.com/raw/geopython/pycsw/pull/474.patch
- id: 140210
  reference_id: ''
  url: http://www.securityfocus.com/bid/94302
- id: 140205
  reference_id: CVE-2016-8640
  url: https://nvd.nist.gov/vuln/detail/CVE-2016-8640
- id: 140207
  reference_id: GHSA-hg4c-rgvm-964g
  url: https://github.com/advisories/GHSA-hg4c-rgvm-964g
severities:
- id: 19371
  reference_id: 140207
  scoring_elements: ''
  scoring_system: cvssv3.1_qr
  value: CRITICAL
summary: A SQL injection vulnerability in pycsw all versions before 2.0.2, 1.10.5
  and 1.8.6 that leads to read and extract of any data from any table in the pycsw
  database that the database user has access to. Also on PostgreSQL (at least) it
  is possible to perform updates/inserts/deletes and database modifications to any
  table the database user has access to.
vulnerability_id: VCID-a7cf-pp33-aaan
weaknesses: []
