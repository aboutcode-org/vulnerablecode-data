affected_purls: []
aliases:
- CVE-2020-14382
fixed_purl:
- pkg:deb/debian/cryptsetup@0?distro=sid
- pkg:deb/debian/cryptsetup@2:2.1.0-5%2Bdeb10u2?distro=sid
- pkg:deb/debian/cryptsetup@2:2.3.4-1?distro=sid
- pkg:deb/debian/cryptsetup@2:2.3.7-1%2Bdeb11u1?distro=sid
- pkg:deb/debian/cryptsetup@2:2.6.1-4?distro=sid
- pkg:deb/debian/cryptsetup@2:2.6.1-4~deb12u1?distro=sid
references:
- id: 129176
  reference_id: '969471'
  url: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=969471
severities: []
summary: A vulnerability was found in upstream release cryptsetup-2.2.0 where, there's
  a bug in LUKS2 format validation code, that is effectively invoked on every device/image
  presenting itself as LUKS2 container. The bug is in segments validation code in
  file 'lib/luks2/luks2_json_metadata.c' in function hdr_validate_segments(struct
  crypt_device *cd, json_object *hdr_jobj) where the code does not check for possible
  overflow on memory allocation used for intervals array (see statement "intervals
  = malloc(first_backup * sizeof(*intervals));"). Due to the bug, library can be *tricked*
  to expect such allocation was successful but for far less memory then originally
  expected. Later it may read data FROM image crafted by an attacker and actually
  write such data BEYOND allocated memory.
vulnerability_id: VCID-gy4c-te6c-aaaq
weaknesses: []
