affected_purls:
- pkg:npm/phantom@0.0.1
- pkg:npm/phantom@0.0.2
- pkg:npm/phantom@0.1.0
- pkg:npm/phantom@0.2.0
- pkg:npm/phantom@0.2.1
- pkg:npm/phantom@0.2.2
- pkg:npm/phantom@0.2.3
- pkg:npm/phantom@0.2.4
- pkg:npm/phantom@0.3.0
- pkg:npm/phantom@0.3.1
- pkg:npm/phantom@0.3.2
- pkg:npm/phantom@0.3.3
- pkg:npm/phantom@0.3.4
- pkg:npm/phantom@0.3.5
- pkg:npm/phantom@0.4.0
- pkg:npm/phantom@0.4.1
- pkg:npm/phantom@0.4.2
- pkg:npm/phantom@0.5.0
- pkg:npm/phantom@0.5.1
- pkg:npm/phantom@0.5.2
- pkg:npm/phantom@0.5.3
- pkg:npm/phantom@0.5.4
- pkg:npm/phantom@0.5.6
- pkg:npm/phantom@0.5.7
- pkg:npm/phantom@0.6.0
- pkg:npm/phantom@0.6.1
- pkg:npm/phantom@0.6.2
- pkg:npm/phantom@0.6.3
- pkg:npm/phantom@0.6.4
- pkg:npm/phantom@0.6.5
- pkg:npm/phantom@0.6.6
- pkg:npm/phantom@0.7.0
- pkg:npm/phantom@0.7.1
- pkg:npm/phantom@0.7.2
- pkg:npm/phantom@0.8.0
- pkg:npm/phantom@0.8.2
- pkg:npm/phantom@0.8.3
- pkg:npm/phantom@0.8.4
- pkg:npm/phantom@0.9.0
- pkg:npm/phantom@1.0.0
- pkg:npm/phantom@2.0.0
- pkg:npm/phantom@2.0.0-alpha
- pkg:npm/phantom@2.0.0-alpha.1
- pkg:npm/phantom@2.0.0-alpha.2
- pkg:npm/phantom@2.0.0-alpha.3
- pkg:npm/phantom@2.0.0-alpha.4
- pkg:npm/phantom@2.0.0-alpha.5
- pkg:npm/phantom@2.0.0-alpha.6
- pkg:npm/phantom@2.0.0-alpha.7
- pkg:npm/phantom@2.0.0-alpha.8
- pkg:npm/phantom@2.0.1
- pkg:npm/phantom@2.0.10
- pkg:npm/phantom@2.0.2
- pkg:npm/phantom@2.0.3
- pkg:npm/phantom@2.0.4
- pkg:npm/phantom@2.0.5
- pkg:npm/phantom@2.0.6
- pkg:npm/phantom@2.0.7
- pkg:npm/phantom@2.0.8
- pkg:npm/phantom@2.0.9
- pkg:npm/phantom@2.1.0
- pkg:npm/phantom@2.1.1
aliases:
- CVE-2019-17221
fixed_purl:
- pkg:npm/phantom@2.1.2
references:
- id: 182465
  reference_id: CVE-2019-17221
  url: https://nvd.nist.gov/vuln/detail/CVE-2019-17221
severities: []
summary: 'Files or Directories Accessible to External Parties

  PhantomJS has an arbitrary file read vulnerability, as demonstrated by an `XMLHttpRequest`
  for a `file://` URI. The vulnerability exists in the `page.open()` function of the
  webpage module, which loads a specified URL and calls a given callback. An attacker
  can supply a specially crafted HTML file, as user input, that allows reading arbitrary
  files on the filesystem. For example, if `page.render()` is the function callback,
  this generates a PDF or an image of the targeted file.'
vulnerability_id: VCID-ft2q-rk7y-aaam
weaknesses: []
